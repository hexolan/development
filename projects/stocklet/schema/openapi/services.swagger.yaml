swagger: "2.0"
info:
  title: stocklet/auth/v1/types.proto
  version: version not set
tags:
  - name: AuthService
  - name: OrderService
  - name: PaymentService
  - name: ProductService
  - name: ShippingService
  - name: UserService
  - name: WarehouseService
consumes:
  - application/json
produces:
  - application/json
paths:
  /v1/auth/jwks:
    get:
      operationId: AuthService_GetJwks
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetJwksResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      tags:
        - AuthService
  /v1/auth/login:
    post:
      operationId: AuthService_LoginPassword
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1LoginPasswordResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1LoginPasswordRequest'
      tags:
        - AuthService
  /v1/auth/password:
    post:
      operationId: AuthService_SetPassword
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1SetPasswordResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1SetPasswordRequest'
      tags:
        - AuthService
  /v1/auth/service:
    get:
      operationId: AuthService_ServiceInfo
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ServiceInfoResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      tags:
        - AuthService
  /v1/order/list:
    get:
      summary: "todo: documentation and proper impl.\r\nGet a list of a customer's orders.\r\nIf accessed through the gateway - shows the current user's orders."
      operationId: OrderService_GetOrders
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetOrdersResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: customerId
          in: query
          required: false
          type: string
      tags:
        - OrderService
  /v1/order/new:
    post:
      operationId: OrderService_PlaceOrder
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1PlaceOrderResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: order
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1Order'
        - name: customerId
          in: query
          required: false
          type: string
      tags:
        - OrderService
  /v1/order/service:
    get:
      operationId: OrderService_ServiceInfo
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ServiceInfoResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      tags:
        - OrderService
  /v1/order/{id}:
    get:
      operationId: OrderService_GetOrder
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetOrderResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: id
          in: path
          required: true
          type: string
      tags:
        - OrderService
  /v1/payment/service:
    get:
      operationId: PaymentService_ServiceInfo
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ServiceInfoResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      tags:
        - PaymentService
  /v1/payment/transaction/{id}:
    get:
      operationId: PaymentService_ViewTransaction
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ViewTransactionResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: id
          in: path
          required: true
          type: string
      tags:
        - PaymentService
  /v1/product/list:
    get:
      operationId: ProductService_GetProducts
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetProductsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      tags:
        - ProductService
  /v1/product/service:
    get:
      operationId: ProductService_ServiceInfo
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ServiceInfoResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      tags:
        - ProductService
  /v1/product/{id}:
    get:
      operationId: ProductService_GetProduct
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetProductResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: id
          in: path
          required: true
          type: string
      tags:
        - ProductService
  /v1/shipping/service:
    get:
      operationId: ShippingService_ServiceInfo
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ServiceInfoResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      tags:
        - ShippingService
  /v1/shipping/shipment/{id}:
    get:
      operationId: ShippingService_ViewShipment
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ViewShipmentResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: id
          in: path
          required: true
          type: string
      tags:
        - ShippingService
  /v1/shipping/shipment/{id}/manifest:
    get:
      operationId: ShippingService_ViewShipmentManifest
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ViewShipmentManifestResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: id
          in: path
          required: true
          type: string
      tags:
        - ShippingService
  /v1/user/service:
    get:
      operationId: UserService_ServiceInfo
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ServiceInfoResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      tags:
        - UserService
  /v1/user/{id}:
    get:
      operationId: UserService_GetUser
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetUserResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: id
          in: path
          required: true
          type: string
      tags:
        - UserService
  /v1/warehouse/product/{id}:
    get:
      operationId: WarehouseService_GetProductStock
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1GetProductStockResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: id
          in: path
          required: true
          type: string
      tags:
        - WarehouseService
  /v1/warehouse/service:
    get:
      operationId: WarehouseService_ServiceInfo
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1ServiceInfoResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      tags:
        - WarehouseService
definitions:
  protobufAny:
    type: object
    properties:
      '@type':
        type: string
    additionalProperties: {}
  rpcStatus:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      details:
        type: array
        items:
          type: object
          $ref: '#/definitions/protobufAny'
  v1AuthToken:
    type: object
    properties:
      tokenType:
        type: string
      accessToken:
        type: string
      expiresIn:
        type: string
        format: int64
  v1GetJwksResponse:
    type: object
    properties:
      keys:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1PublicEcJWK'
  v1GetOrderResponse:
    type: object
    properties:
      order:
        $ref: '#/definitions/v1Order'
  v1GetOrdersResponse:
    type: object
    properties:
      orders:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Order'
  v1GetProductResponse:
    type: object
    properties:
      product:
        $ref: '#/definitions/v1Product'
  v1GetProductStockResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/v1WarehouseStock'
  v1GetProductsResponse:
    type: object
    properties:
      products:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1Product'
  v1GetUserResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/v1User'
  v1LoginPasswordRequest:
    type: object
    properties:
      userId:
        type: string
      password:
        type: string
    required:
      - userId
      - password
  v1LoginPasswordResponse:
    type: object
    properties:
      detail:
        type: string
      data:
        $ref: '#/definitions/v1AuthToken'
  v1Order:
    type: object
    properties:
      id:
        type: string
      status:
        $ref: '#/definitions/v1OrderStatus'
      items:
        type: object
        additionalProperties:
          type: integer
          format: int32
        description: '''items'' consists of a mapping of Product ID to Quantity.'
      customerId:
        type: string
      transactionId:
        type: string
      shippingId:
        type: string
      createdAt:
        type: string
        format: int64
      updatedAt:
        type: string
        format: int64
  v1OrderStatus:
    type: string
    enum:
      - ORDER_STATUS_UNSPECIFIED
      - ORDER_STATUS_PROCESSING
      - ORDER_STATUS_PENDING
      - ORDER_STATUS_REJECTED
      - ORDER_STATUS_APPROVED
      - ORDER_STATUS_SUCCESS
    default: ORDER_STATUS_UNSPECIFIED
  v1PlaceOrderResponse:
    type: object
    properties:
      order:
        $ref: '#/definitions/v1Order'
  v1Product:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      description:
        type: string
      price:
        type: number
        format: float
      createdAt:
        type: string
        format: int64
      updatedAt:
        type: string
        format: int64
  v1PublicEcJWK:
    type: object
    properties:
      kty:
        type: string
      use:
        type: string
      alg:
        type: string
      crv:
        type: string
      x:
        type: string
      "y":
        type: string
  v1ServiceInfoResponse:
    type: object
    properties:
      name:
        type: string
      source:
        type: string
      sourceLicense:
        type: string
  v1SetPasswordRequest:
    type: object
    properties:
      userId:
        type: string
      password:
        type: string
    required:
      - userId
      - password
  v1SetPasswordResponse:
    type: object
    properties:
      detail:
        type: string
  v1Shipment:
    type: object
    properties:
      id:
        type: string
      orderId:
        type: string
      dispatched:
        type: boolean
      createdAt:
        type: string
        format: int64
      updatedAt:
        type: string
        format: int64
  v1ShipmentItem:
    type: object
    properties:
      shipmentId:
        type: string
      productId:
        type: string
      quantity:
        type: integer
        format: int32
  v1Transaction:
    type: object
    properties:
      id:
        type: string
      amount:
        type: number
        format: float
      orderId:
        type: string
      customerId:
        type: string
      processedAt:
        type: string
        format: int64
      reversedAt:
        type: string
        format: int64
        description: Optional - If set, then the transaction has been refunded.
  v1User:
    type: object
    properties:
      id:
        type: string
      email:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      createdAt:
        type: string
        format: int64
      updatedAt:
        type: string
        format: int64
  v1ViewShipmentManifestResponse:
    type: object
    properties:
      data:
        type: array
        items:
          type: object
          $ref: '#/definitions/v1ShipmentItem'
  v1ViewShipmentResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/v1Shipment'
  v1ViewTransactionResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/v1Transaction'
  v1WarehouseStock:
    type: object
    properties:
      productId:
        type: string
      quantity:
        type: integer
        format: int32
