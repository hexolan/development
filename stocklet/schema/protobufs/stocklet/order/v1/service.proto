syntax = "proto3";

package stocklet.order.v1;

import "google/api/annotations.proto";
import "google/api/visibility.proto";
import "stocklet/order/v1/types.proto";

option go_package = "github.com/hexolan/stocklet/internal/pkg/protogen/order/v1;order_v1";

// todo: improve - this is basic layout for planning routes
message GetOrderRequest {
  string order_id = 1;
}
message GetOrderResponse {}

message GetOrdersRequest {}
message GetOrdersResponse {}

message CreateOrderRequest {}
message CreateOrderResponse {}

message UpdateOrderRequest {
  string order_id = 1;
}
message UpdateOrderResponse {}

message CancelOrderRequest {
  string order_id = 1;
}
message CancelOrderResponse {}

// todo: cannot delete active orders - figure out GDPR safe method of handling
// Internal Request Payload
message DeleteUserDataRequest {}

// Internal Request Payload
message DeleteUserDataResponse {}

service OrderService {
  rpc GetOrder(GetOrderRequest) returns (GetOrderResponse) {
    option (google.api.http) = {
      get: "/v1/order/{order_id}"
    };
  }

  rpc GetOrders(GetOrdersRequest) returns (GetOrdersResponse) {
    option (google.api.http) = {
      get: "/v1/order/list"
    };
  }

  rpc CreateOrder(CreateOrderRequest) returns (CreateOrderResponse) {
    option (google.api.http) = {
      post: "/v1/order/new"
      body: "*"
    };
  }

  rpc UpdateOrder(UpdateOrderRequest) returns (UpdateOrderResponse) {
    option (google.api.http) = {
      post: "/v1/order/{order_id}"
      body: "*"
    };
  }

  rpc CancelOrder(CancelOrderRequest) returns (CancelOrderResponse) {
    option (google.api.http) = {
      delete: "/v1/order/{order_id}"
    };
  }

  // internal method
  rpc DeleteUserData(DeleteUserDataRequest) returns (DeleteUserDataResponse) {
    option (google.api.method_visibility).restriction = "INTERNAL";
  }
}
