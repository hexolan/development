// Copyright (C) 2024 Declan Teevan
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Affero General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Affero General Public License for more details.
//
// You should have received a copy of the GNU Affero General Public License
// along with this program.  If not, see <https://www.gnu.org/licenses/>.

syntax = "proto3";

package stocklet.order.v1;

import "buf/validate/validate.proto";
import "google/api/annotations.proto";
import "google/api/visibility.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/field_mask.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "stocklet/order/v1/events.proto";
import "stocklet/order/v1/types.proto";

option go_package = "github.com/hexolan/stocklet/internal/pkg/protogen/order/v1;order_v1";

service OrderService {
  rpc GetOrder(GetOrderRequest) returns (GetOrderResponse) {
    option (google.api.http) = {get: "/v1/order/{id}"};
  }

  rpc GetOrders(GetOrdersRequest) returns (GetOrdersResponse) {
    option (google.api.http) = {get: "/v1/order/list"};
  }

  rpc CreateOrder(CreateOrderRequest) returns (CreateOrderResponse) {
    option (google.api.http) = {
      post: "/v1/order/new"
      body: "order"
    };
  }

  rpc UpdateOrder(UpdateOrderRequest) returns (UpdateOrderResponse) {
    // todo: ensure proper implementation
    // https://grpc-ecosystem.github.io/grpc-gateway/docs/mapping/patch_feature/
    // option (google.api.http) = {
    //   put: "/v1/order/{order.id}"
    //   body: "order"
    //   additional_bindings {
    //     patch: "/v1/order/{order.id}"
    //     body: "order"
    //   }
    // };

    // with only patch (PUT requires full resource)
    option (google.api.http) = {
      patch: "/v1/order/{order.id}"
      body: "order"
    };
  }

  rpc CancelOrder(CancelOrderRequest) returns (CancelOrderResponse) {
    option (google.api.http) = {delete: "/v1/order/{id}"};
  }

  rpc GetOrderItems(GetOrderItemsRequest) returns (GetOrderItemsResponse) {
    option (google.api.http) = {get: "/v1/order/{id}/items"};
  }

  // Internal Service Methods
  rpc DeleteUserData(DeleteUserDataRequest) returns (DeleteUserDataResponse) {
    option (google.api.method_visibility).restriction = "INTERNAL";
  }

  // Internal Event Methods
  //
  // Processes PlaceOrderEvents.
  // > If a failure status is recieved then the order is updated and marked rejected.
  // > If a success status is recieved, from the last stage of the SAGA, then the order is marked approved.
  //
  // buf:lint:ignore RPC_REQUEST_RESPONSE_UNIQUE
  // buf:lint:ignore RPC_REQUEST_STANDARD_NAME
  // buf:lint:ignore RPC_RESPONSE_STANDARD_NAME
  rpc ProcessPlaceOrderEvent(PlaceOrderEvent) returns (google.protobuf.Empty) {
    option (google.api.method_visibility).restriction = "INTERNAL";
  }
}

message GetOrderRequest {
  string id = 1 [(buf.validate.field).string.min_len = 1];
}

message GetOrderResponse {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "Order Response",
      description: "abcdef"
    },
    example: "{\"data\": {\"id\": \"123\"}}"
  };

  Order data = 1;
}

message GetOrdersRequest {
  // Request a list of a customer's orders
  string customer_id = 1 [(buf.validate.field).string.min_len = 1];
}

message GetOrdersResponse {
  repeated Order data = 1;
}

message CreateOrderRequest {
  Order order = 1;
}

message CreateOrderResponse {
  Order data = 1;
}

message UpdateOrderRequest {
  Order order = 1;
  google.protobuf.FieldMask mask = 2;
}

message UpdateOrderResponse {
  Order data = 1;
}

message CancelOrderRequest {
  string id = 1 [(buf.validate.field).string.min_len = 1];
}

message CancelOrderResponse {}

message GetOrderItemsRequest {
  // Order Id
  string id = 1 [(buf.validate.field).string.min_len = 1];
}

message GetOrderItemsResponse {
  map<string, int32> data = 1;
}

message DeleteUserDataRequest {}

message DeleteUserDataResponse {}
