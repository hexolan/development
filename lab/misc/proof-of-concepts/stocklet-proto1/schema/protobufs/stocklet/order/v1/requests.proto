syntax = "proto3";

package stocklet.order.v1;

import "buf/validate/validate.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "stocklet/order/v1/types.proto";

option go_package = "github.com/hexolan/stocklet/internal/pkg/protogen/order/v1;order_v1";

message GetOrderRequest {
  // Request an order by specifying order id
  string id = 1 [(buf.validate.field).string.min_len = 1];
}

message GetOrderResponse {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "Order Response",
      description: "abcdef"
    },
    example: "{\"data\": {\"id\": \"123\"}}"
  };

  Order data = 1;
}

message GetOrdersRequest {
  // Request a list of a customer's orders
  string customer_id = 1 [(buf.validate.field).string.min_len = 1];
}

message GetOrdersResponse {
  repeated Order data = 1;
}

// todo:
// modify in future when field mask ignores are implemented: https://github.com/bufbuild/protovalidate/issues/112
// > https://github.com/bufbuild/protovalidate/issues/80 (states not currently on roadmap; though community implementation are welcome potentially?)
// when a field mask for 'skipped_fields' is implemented, field can be changed back to:
// Order order = 1;
//
// In the mean time, reserve field id 1?

message CreateOrderRequest {
  Order order = 1;
}

message CreateOrderResponse {
  Order data = 1;
}

message UpdateOrderRequest {
  Order order = 1;
}

message UpdateOrderResponse {}

message CancelOrderRequest {
  string id = 1; [(buf.validate.field).string.min_len = 1];
}

message CancelOrderResponse {}

// todo: cannot delete active orders - figure out GDPR safe method of handling
// Internal Request Payload
message DeleteUserDataRequest {}

// Internal Request Payload
message DeleteUserDataResponse {}
