admin:
  address:
    socket_address: { address: 0.0.0.0, port_value: 8080 }

static_resources:
  listeners:
  - name: edge-ingress
    address:
      socket_address: { address: 0.0.0.0, port_value: 80 }
    filter_chains:
    # Route Mapping to Services
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          stat_prefix: ingress_http
          codec_type: AUTO
          route_config:
            name: local_route
            virtual_hosts:
            - name: local_service
              domains: ["*"]
              routes:
              - match: { prefix: "/v1/foo/" }
                route: { cluster: service, prefix_rewrite: "/" }
          http_filters:
          # JWT Validation
          # https://www.envoyproxy.io/docs/envoy/latest/api-v3/extensions/filters/http/jwt_authn/v3/config.proto#envoy-v3-api-msg-extensions-filters-http-jwt-authn-v3-jwtprovider
          - name: envoy.filters.http.jwt_authn
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.jwt_authn.v3.JwtAuthentication
              providers:
                provider1:
                  # https://www.envoyproxy.io/docs/envoy/latest/api-v3/extensions/filters/http/jwt_authn/v3/config.proto#envoy-v3-api-field-extensions-filters-http-jwt-authn-v3-jwtprovider-remote-jwks
                  local_jwks:
                    filename: /etc/envoy/jwks/jwks.txt
                  from_headers:
                  - name: Authorization
                  forward: true
                  forward_payload_header: X-JWT-Payload
              rules:
              - match:
                  prefix: /
                # https://github.com/envoyproxy/envoy/blob/d01ec7249f17e06f2dd01aef32efe26ebed5ff1b/api/envoy/extensions/filters/http/jwt_authn/v3/config.proto#L681
                requires:
                  # https://www.envoyproxy.io/docs/envoy/latest/api-v3/extensions/filters/http/jwt_authn/v3/config.proto#extensions-filters-http-jwt-authn-v3-jwtrequirement
                  requires_any:
                    requirements:
                      - provider_name: provider1
                      - allow_missing: {}
          # Router
          - name: envoy.filters.http.router
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
  clusters:
  - name: service
    connect_timeout: 0.25s
    type: STRICT_DNS
    lb_policy: ROUND_ROBIN
    load_assignment:
      cluster_name: service
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: service
                port_value: 90